// Generated by CoffeeScript 1.10.0
(function() {
  var Image;

  this.LazyLoadNS = this.LazyLoadNS || {};

  Image = (function() {
    var Rectangle, Viewport;

    Rectangle = LazyLoadNS.Rectangle;

    Viewport = LazyLoadNS.Viewport;

    function Image(imageElement, _loadingImage) {
      this._loadingImage = _loadingImage;
      this._imageElement = imageElement;
    }

    Image.prototype.rectangle = function() {
      var height, left, top, width;
      left = this._imageElement.offsetLeft;
      top = this._imageElement.offsetTop;
      width = this._imageElement.width;
      height = this._imageElement.height;
      return new Rectangle(left, top, width, height);
    };

    Image.prototype.isInViewPort = function() {
      var imageRectangle, viewPortRectangle;
      viewPortRectangle = new Viewport().rectangle();
      imageRectangle = this.rectangle();
      if (viewPortRectangle.hasCollisionWithRectangle(imageRectangle)) {
        return true;
      }
      return false;
    };

    Image.prototype._isAlreadyCancelled = function() {
      if (this._imageElement.getAttribute("cancelled") === "true") {
        return true;
      }
      return false;
    };

    Image.prototype.cancel = function() {
      var realSrc;
      if (this._isAlreadyCancelled()) {
        return;
      }
      this._imageElement.setAttribute("cancelled", "true");
      realSrc = this._imageElement.getAttribute("src");
      this._imageElement.src = this._loadingImage;
      return this._imageElement.setAttribute("data-src", realSrc);
    };

    Image.prototype.show = function() {
      var realSrc;
      realSrc = this._imageElement.getAttribute("data-src");
      this._imageElement.src = realSrc;
      this._imageElement.removeAttribute("data-src");
      this._imageElement.removeAttribute("data-lazy-load");
      return this._imageElement.removeAttribute("cancelled");
    };

    return Image;

  })();

  LazyLoadNS.Image = Image;

}).call(this);
